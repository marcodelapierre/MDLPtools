##############################################################################
# maali cygnet file for dummytools
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

dummytools

This is just a set of small pieces of code, 
designed to hopefully quickly check things on machines I use.

Github repository: https://github.com/marcodelapierre/dummytools

EOF

MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"
MAALI_TOOL_CPU_TARGET="$MAALI_DEFAULT_TOOL_CPU_TARGET"
MAALI_TOOL_MPI_COMPILERS="openmpi/2.1.2 intel-mpi/2017.0.4"

MAALI_URL="https://github.com/marcodelapierre/dummytools/archive/$MAALI_TOOL_VERSION.tar.gz"
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/dummytools-$MAALI_TOOL_VERSION"

MAALI_TOOL_PREREQ=""

MAALI_TOOL_TYPE="tools"

MAALI_MODULE_SET_PATH=1
##############################################################################

function maali_build {

cd "$MAALI_TOOL_BUILD_DIR"/parallel

MPICC=mpicc
MPICXX=mpicxx
MPIF90=mpif90
if [ "$MPI_NAME" == "intel-mpi" ] && [ "$COMPILER" == "intel" ] ; then
  MPICC=mpiicc
  MPICXX=mpiicpc
  MPIF90=mpiifort
fi

if [ "$COMPILER" == "intel" ] ; then
  OMP="-qopenmp"
elif [ "$COMPILER" == "gcc" ] ; then
  OMP="-fopenmp"
fi

maali_run "$CC -O2 $OMP -o omp omp_hello.c"
maali_run "$MPICC -O2 -o mpi -o mpi mpi_hello.c"
maali_run "$MPICC -O2 $OMP -o hyb hybrid_mpi_omp_hello.c"

MAALI_INSTALL_FILES="omp mpi hyb"
maali_makedir "$MAALI_INSTALL_DIR/bin"
for file in $MAALI_INSTALL_FILES ; do
  maali_run "install -m 755 ${file} $MAALI_INSTALL_DIR/bin/dummy-${file}"
done

}

##############################################################################
